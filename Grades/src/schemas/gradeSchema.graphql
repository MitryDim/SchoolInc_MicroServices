input GradeInput {
  value: Int!
  courseId: ID!
  userId: ID!
}

extend type Course @key(fields: "id") {
  id: ID @external
}

extend type User @key(fields: "id") {
  id: ID @external
}

type Grade @join__type(graph: GRADES, key: "id")  {
  id: ID!
  value: Int
  course: Course
  user: User
}

extend type Class @key(fields: "id") {
  id: ID @external
}

type Query {
  getGrade(id: ID!): Grade
  getAllGrades: [Grade]
  getAllGradesByUserId(userId: ID!): [Grade]
  getAllGradesByCourseId(courseId: ID!): [Grade]
}

type Mutation {
  createGrade(grade: GradeInput): Grade
  updateGrade(id: ID!, grade: GradeInput): Grade
}
